diff --git a/main.go b/main.go
index 8ba2ea8..1239bf5 100644
--- a/main.go
+++ b/main.go
@@ -3,9 +3,6 @@ package main
 import (
 	"flag"
 	"fmt"
-	"io/ioutil"
-	"net/http"
-	"os"
 	"runtime"
 	"sort"
 	"strconv"
@@ -15,15 +12,14 @@ import (
 	"github.com/cheggaaa/pb/v3"
 )
 
-var version, ipFile, outputFile, versionNew string
+var ipFile, outputFile string
 var disableDownload, ipv6Mode, allip bool
 var tcpPort, printResultNum, downloadSecond int
 var timeLimit, speedLimit float64
 
 func init() {
-	var printVersion bool
 	var help = `
-CloudflareSpeedTest ` + version + `
+CloudflareSpeedTest
 测试 Cloudflare CDN 所有 IP 的延迟和速度，获取最快 IP (IPv4+IPv6)！
 https://github.com/XIU2/CloudflareSpeedTest
 
@@ -47,7 +43,7 @@ https://github.com/XIU2/CloudflareSpeedTest
     -p 20
         显示结果数量；测速后直接显示指定数量的结果，为 0 时不显示结果直接退出；(默认 20)
     -f ip.txt
-        IP段数据文件；如路径含有空格请加上引号；支持其他 CDN IP段；(默认 ip.txt)
+        IP段数据文件；如路径含有空格请加上引号；支持其他 CDN IP段；(默认为程序预置ip段)
     -o result.csv
         输出结果文件；如路径含有空格请加上引号；值为空格时不输出 [-o " "]；(默认 result.csv)
     -dd
@@ -56,8 +52,6 @@ https://github.com/XIU2/CloudflareSpeedTest
         IPv6测速模式；确保 IP 段数据文件内只包含 IPv6 IP段，软件不支持同时测速 IPv4+IPv6；(默认 IPv4)
     -allip
         测速全部的IP；对 IP 段中的每个 IP (仅支持 IPv4) 进行测速；(默认 每个 IP 段随机测速一个 IP)
-    -v
-        打印程序版本+检查版本更新
     -h
         打印帮助说明
 `
@@ -72,25 +66,13 @@ https://github.com/XIU2/CloudflareSpeedTest
 	flag.Float64Var(&speedLimit, "sl", 0, "下载速度下限")
 	flag.IntVar(&printResultNum, "p", 20, "显示结果数量")
 	flag.BoolVar(&disableDownload, "dd", false, "禁用下载测速")
-	flag.BoolVar(&ipv6Mode, "ipv6", false, "禁用下载测速")
+	flag.BoolVar(&ipv6Mode, "ipv6", false, "IPv6测速模式")
 	flag.BoolVar(&allip, "allip", false, "测速全部 IP")
-	flag.StringVar(&ipFile, "f", "ip.txt", "IP 数据文件")
+	flag.StringVar(&ipFile, "f", "/usr/share/cloudflarespeedtest/ip.txt", "IP 数据文件")
 	flag.StringVar(&outputFile, "o", "result.csv", "输出结果文件")
-	flag.BoolVar(&printVersion, "v", false, "打印程序版本")
 
 	flag.Usage = func() { fmt.Print(help) }
 	flag.Parse()
-	if printVersion {
-		println(version)
-		fmt.Println("检查版本更新中...")
-		checkUpdate()
-		if versionNew != "" {
-			fmt.Println("发现新版本 [" + versionNew + "]！请前往 [https://github.com/XIU2/CloudflareSpeedTest] 更新！")
-		} else {
-			fmt.Println("当前为最新版本 [" + version + "]！")
-		}
-		os.Exit(0)
-	}
 	if pingRoutine <= 0 {
 		pingRoutine = 500
 	}
@@ -119,15 +101,17 @@ https://github.com/XIU2/CloudflareSpeedTest
 		printResultNum = 20
 	}
 	if ipFile == "" {
-		ipFile = "ip.txt"
+		ipFile = "/usr/share/cloudflarespeedtest/ip.txt"
 	}
 	if outputFile == " " {
 		outputFile = ""
 	}
+	if ipv6Mode {
+		ipFile = "/usr/share/cloudflarespeedtest/ipv6.txt"
+	}
 }
 
 func main() {
-	go checkUpdate()                          // 检查版本更新
 	initRandSeed()                            // 置随机数种子
 	failTime = pingTime                       // 设置接收次数
 	ips := loadFirstIPOfRangeFromFile(ipFile) // 读入IP
@@ -140,7 +124,7 @@ func main() {
 	downloadTestTime = time.Duration(downloadSecond) * time.Second
 
 	// 开始延迟测速
-	fmt.Println("# XIU2/CloudflareSpeedTest " + version + "\n")
+	fmt.Println("# XIU2/CloudflareSpeedTest \n")
 	if ipv6Mode { // IPv6 模式判断
 		fmt.Println("开始延迟测速（模式：TCP IPv6，端口：" + strconv.Itoa(tcpPort) + "，平均延迟上限：" + fmt.Sprintf("%.2f", timeLimit) + " ms）：")
 	} else {
@@ -234,9 +218,6 @@ func printResult(data []CloudflareIPData) {
 				}
 			}
 
-			if versionNew != "" {
-				fmt.Println("\n发现新版本 [" + versionNew + "]！请前往 [https://github.com/XIU2/CloudflareSpeedTest] 更新！")
-			}
 
 			if sysType == "windows" { // 如果是 Windows 系统，则需要按下 回车键 或 Ctrl+C 退出（避免通过双击运行时，测速完毕后直接关闭）
 				if outputFile != "" {
@@ -259,20 +240,4 @@ func printResult(data []CloudflareIPData) {
 	}
 }
 
-// 检查更新
-func checkUpdate() {
-	timeout := time.Duration(10 * time.Second)
-	client := http.Client{Timeout: timeout}
-	res, err := client.Get("https://api.xiuer.pw/ver/cloudflarespeedtest.txt")
-	if err == nil {
-		// 读取资源数据 body: []byte
-		body, err := ioutil.ReadAll(res.Body)
-		// 关闭资源流
-		res.Body.Close()
-		if err == nil {
-			if string(body) != version {
-				versionNew = string(body)
-			}
-		}
-	}
-}
+

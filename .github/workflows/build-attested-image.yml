name: build-attested-image
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-attested-image.yml'
      - 'docker/**'
  workflow_dispatch:
    inputs:
      use-cache:
        description: 'Enable cache'
        required: false
        default: true
        type: boolean
  schedule:
    # Runs at 00:00 UTC every Monday
    # https://crontab.guru/#0_0_*_*_1
    - cron: '0 0 * * 1'
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    env:
      REGISTRY: ghcr.io
      USERNAME: ${{ github.actor }}
      CACHE_ENABLED: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.use-cache == true) }}
    steps:
      - name: lowercase github.repository
        id: lowercase
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> ${GITHUB_OUTPUT}
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get current UID and GID
        id: get-uid-gid
        run: |
          echo "UID=$(id -u)" >> ${GITHUB_OUTPUT}
          echo "GID=$(id -g)" >> ${GITHUB_OUTPUT}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: docker/
          push: true
          platforms: linux/amd64
          tags: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.IMAGE_NAME }}:latest
          build-args: |
            UID=${{ steps.get-uid-gid.outputs.UID }}
            GID=${{ steps.get-uid-gid.outputs.GID }}
          cache-from: ${{ env.CACHE_ENABLED && 'type=gha' || '' }}
          cache-to: ${{ env.CACHE_ENABLED && 'type=gha,mode=max' || '' }}
      - name: Attest
        uses: actions/attest-build-provenance@v2
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ steps.lowercase.outputs.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

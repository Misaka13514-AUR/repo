From 9fe2af9f770ed3bd6a9698971e8be280b04a3150 Mon Sep 17 00:00:00 2001
From: WerWolv <werwolv98@gmail.com>
Date: Wed, 6 Jul 2022 11:29:24 +0200
Subject: [PATCH 4/4] fix: Issue opening files that contain special characters
 on Linux

This is a (hopefully temporary) hack. Fixes #568
---
 lib/libimhex/include/hex/helpers/net.hpp |  1 +
 lib/libimhex/source/helpers/fs.cpp       | 13 ++++++++++++-
 lib/libimhex/source/helpers/net.cpp      | 13 +++++++++++++
 3 files changed, 26 insertions(+), 1 deletion(-)

diff --git a/lib/libimhex/include/hex/helpers/net.hpp b/lib/libimhex/include/hex/helpers/net.hpp
index f85087f8..13881338 100644
--- a/lib/libimhex/include/hex/helpers/net.hpp
+++ b/lib/libimhex/include/hex/helpers/net.hpp
@@ -44,6 +44,7 @@ namespace hex {
         std::future<Response<void>> downloadFile(const std::string &url, const std::fs::path &filePath, u32 timeout = DefaultTimeout);
 
         [[nodiscard]] std::string encode(const std::string &input);
+        [[nodiscard]] std::string decode(const std::string &input);
 
         [[nodiscard]] float getProgress() const { return this->m_progress; }
 
diff --git a/lib/libimhex/source/helpers/fs.cpp b/lib/libimhex/source/helpers/fs.cpp
index a88a193f..47215ffe 100644
--- a/lib/libimhex/source/helpers/fs.cpp
+++ b/lib/libimhex/source/helpers/fs.cpp
@@ -5,6 +5,7 @@
 #include <hex/helpers/fs_macos.hpp>
 #include <hex/helpers/file.hpp>
 #include <hex/helpers/intrinsics.hpp>
+#include <hex/helpers/net.hpp>
 
 #include <xdg.hpp>
 
@@ -87,8 +88,18 @@ namespace hex::fs {
                 hex::unreachable();
         }
 
+        std::fs::path path;
+        #if defined(OS_LINUX)
+            // xdg-desktop-portal, which is the file picker backend used on Linux, returns all paths with URI encoding.
+            // This is a bit ugly and will most likely be fixed sometime in the future but until then, we'll just use
+            // curl to decode the URI string into a valid file path string
+            path = Net().decode(outPath);
+        #else
+            path = reinterpret_cast<char8_t*>(outPath);
+        #endif
+
         if (result == NFD_OKAY) {
-            callback(reinterpret_cast<const char8_t *>(outPath));
+            callback(path);
             NFD::FreePath(outPath);
         }
 
diff --git a/lib/libimhex/source/helpers/net.cpp b/lib/libimhex/source/helpers/net.cpp
index 0d73ed10..c0cd008a 100644
--- a/lib/libimhex/source/helpers/net.cpp
+++ b/lib/libimhex/source/helpers/net.cpp
@@ -219,6 +219,19 @@ namespace hex {
         return {};
     }
 
+    std::string Net::decode(const std::string &input) {
+        auto unescapedString = curl_easy_unescape(this->m_ctx, input.c_str(), std::strlen(input.c_str()), nullptr);
+
+        if (unescapedString != nullptr) {
+            std::string output = unescapedString;
+            curl_free(unescapedString);
+
+            return output;
+        }
+
+        return {};
+    }
+
     std::string Net::s_proxyUrl;
 
     void Net::setProxy(const std::string &url) {
-- 
2.37.0

